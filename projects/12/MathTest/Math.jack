// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
		static Array bits;

    /** Initializes the library. */
    function void init() {
			let bits = Array.new(15);
			let bits[0] = 1;
			let bits[1] = 2;
			let bits[2] = 4;
			let bits[3] = 8;
			let bits[4] = 16;
			let bits[5] = 32;
			let bits[6] = 64;
			let bits[7] = 128;
			let bits[8] = 256;
			let bits[9] = 512;
			let bits[10] = 1024;
			let bits[11] = 2048;
			let bits[12] = 4096;
			let bits[13] = 8192;
			let bits[14] = 16384;
			let bits[15] = 32767;

      return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
			if (x > 0) {
				return x;
			}

			return Math.multiply(x, -1);
    }

		function boolean bit(int x, int i) {
			return x & bits[i];
		}

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
			var int i, sum, shiftedX;
			let sum = 0;
			let shiftedX = x;
			
			let i = 0;
			while (i < 16) {
				if (Math.bit(y, i)) {
					let sum = sum + shiftedX;
				}
				
				let shiftedX = shiftedX + shiftedX;
				let i = i + 1;
			}
			
      return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
      var int q, tmp, re;
      var boolean neg;
      let neg = false;

      if (x < 0) {
        let x = -x;
        let neg = true;
      }

      if (y < 0) {
        let y = -y;
        let neg = true;
      }

      if (y > x) {
        return 0;
      }

      let q = Math.divide(x, y+y);

      if ((x - ((q+q)*y)) < y) {
        let re = q+q;
      } else {
        let re = q+q+1;
      }
      
      if (neg) {
        return -re;
      }

      return re;
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
      return 0;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
			if (a > b) {
				return a;
			}
			
			return b;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
			if (a < b) {
					return a;
			}
			
			return b;

    }
}
